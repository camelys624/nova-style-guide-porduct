{"version":3,"file":"component---src-pages-front-end-page-tsx-c02bb3ccd696b9175493.js","mappings":"sGAeAA,EAAOC,QAfP,SAAyBC,EAAKC,EAAKC,GAYjC,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,GAGyBF,EAAOC,QAAQS,YAAa,EAAMV,EAAOC,QAAiB,QAAID,EAAOC,S,qBCTvG,IAAMU,EAAcC,EAAQ,MAE5BZ,EAAOC,QAAU,CACfU,YAAaA,I,spBCTf,IAAME,EAAQD,EAAQ,MACdE,EAAQF,EAAQ,MAAhBE,IACAC,EAAgBH,EAAQ,MAAxBG,YAERf,EAAOC,QAAU,YAIb,IAHFe,EAGC,EAHDA,MACAC,EAEC,EAFDA,SACGC,EACF,OACKC,EAAWJ,EAAYC,GAGvBI,EAAMP,EAAMQ,SAAQ,WACxB,IAAKJ,EACH,OAAO,KAGT,IAAMK,EAAS,GAGbT,MAAAA,EACAC,IAAAA,GACGK,GAGCI,EAAOlB,OAAOkB,KAAKD,GACnBE,EAASD,EAAKE,KAAI,SAAAtB,GAAG,OAAImB,EAAUnB,MAGzC,OAFQ,EAAOuB,SAAP,iBAA0BH,GAA1B,IAAmCN,KAElC,WAAFU,EAAAA,CAAG,IAAH,SAAUH,OAChB,CAACP,EAAUD,IAEd,OAAOH,EAAMe,cAAcR,EAApBP,EAAAA,GAA6BK,M,0FCzBvB,SAASW,EAAeX,GACrC,OAAQL,EAAAA,cAAAA,EAAAA,SAAAA,KACNA,EAAAA,cAACiB,EAAAA,KAAD,CAAMC,UCRQ,4BDQ6BC,GAAI,IAAMd,EAAMe,MACzDpB,EAAAA,cAAAA,KAAAA,KAAKK,EAAMgB,SEJF,SAASC,EAASjB,GAC/B,OAAQL,EAAAA,cAAAA,EAAAA,SAAAA,KACNA,EAAAA,cAAAA,KAAAA,CAAIkB,UCNqB,yCDMsBb,EAAMgB,OACrDrB,EAAAA,cAAAA,MAAAA,CAAKkB,UCRsB,2CDSxBb,EAAMkB,KAAKX,KAAI,SAACY,EAAkBC,GAAnB,OAAqCzB,EAAAA,cAACgB,EAAD,CAAgBK,MAAOG,EAAKH,MAAOD,KAAMI,EAAKJ,KAAM9B,IAAKmC,S,wBEQpH,EAbqB,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,KAAMtB,EAAmB,EAAnBA,SAKzB,OAJAuB,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,QAGG5B,EAAAA,cAAC6B,EAAAA,EAAD,KACJH,EAAKd,KAAI,SAACY,EAAmBC,GAC5B,OAAOzB,EAAAA,cAACsB,EAAD,CAAUD,MAAOG,EAAKH,MAAOE,KAAMC,EAAKD,KAAMjC,IAAKmC,OAE3DrB,K,qFCTD0B,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAmCJ,OAnCIA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACLC,OAAAA,WACC,IAAIC,EAAwB,GACxBC,EAAe,GACfC,EAAqB,CACxBb,MAAO,GACPD,KAAM,GACNe,KAAM,IA4BP,OAxBmBC,KAAK/B,MAAMqB,KAAtBW,OACDC,MAAMC,SAAQ,SAACf,GACrB,IAAIgB,EAAehB,EAAKiB,YAAYD,KAChCE,EAAyB,CAC5BrB,MAAOG,EAAKiB,YAAYpB,MACxBD,KAAMI,EAAKJ,MAGPoB,EAKAP,EAAQO,GAOZP,EAAQO,GAAMjB,KAAKoB,KAAKD,IANxBT,EAAQO,GAAQ,CACfnB,MAAOmB,EACPjB,KAAM,CAACmB,IAERV,EAAOW,KAAKV,EAAQO,KATpBN,EAASV,KAeJxB,EAAAA,cAAC4C,EAAAA,EAAD,CAAclB,KAAMM,GAC1BhC,EAAAA,cAACF,EAAAA,YAAD,KAAcoC,EAAOC,MAAQ,MAD9B,EAnCIL,CAAqBe,EAAAA,WA0D3B","sources":["webpack://nova-style-guid/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://nova-style-guid/./node_modules/gatsby-plugin-mdx/index.js","webpack://nova-style-guid/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://nova-style-guid/./src/components/custom-link-card/index.tsx","webpack://nova-style-guid/./src/components/custom-link-card/index.module.css","webpack://nova-style-guid/./src/components/type-card/index.tsx","webpack://nova-style-guid/./src/components/type-card/index.module.css","webpack://nova-style-guid/./src/components/template-page/index.tsx","webpack://nova-style-guid/./src/pages/front-end-page.tsx"],"sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import React from 'react'\r\nimport {Link} from 'gatsby'\r\nimport {MdxContent} from \"../template-page\"\r\n\r\n// @ts-ignore\r\nimport * as customLinkCardStyle from './index.module.css'\r\n\r\nexport default function CustomLinkCard(props: MdxContent) {\r\n  return (<>\r\n    <Link className={customLinkCardStyle.card} to={'/' + props.slug}>\r\n      <h3>{props.title}</h3>\r\n    </Link>\r\n  </>)\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport var card = \"index-module--card--FvfCF\";","import * as React from 'react'\r\nimport CustomLinkCard from \"../custom-link-card\"\r\nimport {ContentType, MdxContent} from \"../template-page\"\r\n// @ts-ignore\r\nimport * as typeCardStyle from './index.module.css'\r\n\r\nexport default function TypeCard(props: ContentType) {\r\n  return (<>\r\n    <h2 className={typeCardStyle.typeCard__title}>{props.title}</h2>\r\n    <div className={typeCardStyle.typeCard__content}>\r\n      {props.list.map((item: MdxContent, index: number) => <CustomLinkCard title={item.title} slug={item.slug} key={index} />)}\r\n    </div>\r\n  </>)\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport var typeCard__content = \"index-module--type-card__content--wul88\";\nexport var typeCard__title = \"index-module--type-card__title--fwrmv\";","import React, {useEffect} from 'react'\r\nimport TypeCard from \"../type-card\"\r\nimport {initHighlight} from \"../../utils\"\r\nimport Layout from \"../Layout\"\r\n\r\nconst TemplatePage = ({data, children}: any) => {\r\n    useEffect(() => {\r\n        initHighlight()\r\n    })\r\n\r\n    return <Layout>\r\n      {data.map((item: ContentType, index: number) => {\r\n        return <TypeCard title={item.title} list={item.list} key={index} />\r\n      })}\r\n      {children}\r\n    </Layout>\r\n}\r\n\r\nexport default TemplatePage\r\n\r\nexport interface ContentType {\r\n  title: string,\r\n  list: MdxContent[]\r\n}\r\n\r\nexport interface MdxContent {\r\n  title: string,\r\n  slug: string,\r\n  body?: string\r\n}\r\n","import React, { Component } from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\r\nimport TemplatePage, { ContentType, MdxContent } from \"../components/template-page\"\r\n\r\nclass FrontEndPage extends Component<Element, any> {\r\n\trender() {\r\n\t\tlet result: ContentType[] = []\r\n\t\tlet typeMap: any = {}\r\n\t\tlet readme: MdxContent = {\r\n\t\t\ttitle: '',\r\n\t\t\tslug: '',\r\n\t\t\tbody: ''\r\n\t\t}\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst { allMdx } = this.props.data\r\n\t\tallMdx.nodes.forEach((item: any) => {\r\n\t\t\tlet type: string = item.frontmatter.type\r\n\t\t\tlet formatItem: MdxContent = {\r\n\t\t\t\ttitle: item.frontmatter.title,\r\n\t\t\t\tslug: item.slug\r\n\t\t\t}\r\n\r\n\t\t\tif (!type) {\r\n\t\t\t\treadme = item\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tif (!typeMap[type]) {\r\n\t\t\t\ttypeMap[type] = {\r\n\t\t\t\t\ttitle: type,\r\n\t\t\t\t\tlist: [formatItem]\r\n\t\t\t\t}\r\n\t\t\t\tresult.push(typeMap[type])\r\n\t\t\t} else {\r\n\t\t\t\ttypeMap[type].list.push(formatItem)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn <TemplatePage data={result}>\r\n\t\t\t<MDXRenderer>{readme.body || ''}</MDXRenderer>\r\n\t\t</TemplatePage>\r\n\t}\r\n}\r\n\r\nexport const query = graphql`\r\n    query {\r\n        allMdx(filter: {slug: {regex: \"/front-guide/\"}}) {\r\n            nodes {\r\n                frontmatter {\r\n                    title\r\n                    type\r\n                    date\r\n                }\r\n                id\r\n                body\r\n                slug\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default FrontEndPage\r\n"],"names":["module","exports","obj","key","value","Object","defineProperty","enumerable","configurable","writable","__esModule","MDXRenderer","require","React","mdx","useMDXScope","scope","children","props","mdxScope","End","useMemo","fullScope","keys","values","map","Function","fn","createElement","CustomLinkCard","Link","className","to","slug","title","TypeCard","list","item","index","data","useEffect","initHighlight","Layout","FrontEndPage","render","result","typeMap","readme","body","this","allMdx","nodes","forEach","type","frontmatter","formatItem","push","TemplatePage","Component"],"sourceRoot":""}